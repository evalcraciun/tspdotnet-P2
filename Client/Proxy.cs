//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotosWCF
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "File", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotosWCF", IsReference = true)]
    public partial class File : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string FileDateField;

        private string FileDescField;

        private int FileIDField;

        private string FileNameField;

        private string FilePathField;

        private string FileSizeField;

        private string FileTagsField;

        private string FileTypeField;

        private MyPhotosWCF.Folder FolderField;

        private int FolderIdField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileDate
        {
            get
            {
                return this.FileDateField;
            }
            set
            {
                this.FileDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileDesc
        {
            get
            {
                return this.FileDescField;
            }
            set
            {
                this.FileDescField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileID
        {
            get
            {
                return this.FileIDField;
            }
            set
            {
                this.FileIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath
        {
            get
            {
                return this.FilePathField;
            }
            set
            {
                this.FilePathField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileSize
        {
            get
            {
                return this.FileSizeField;
            }
            set
            {
                this.FileSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileTags
        {
            get
            {
                return this.FileTagsField;
            }
            set
            {
                this.FileTagsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType
        {
            get
            {
                return this.FileTypeField;
            }
            set
            {
                this.FileTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosWCF.Folder Folder
        {
            get
            {
                return this.FolderField;
            }
            set
            {
                this.FolderField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderId
        {
            get
            {
                return this.FolderIdField;
            }
            set
            {
                this.FolderIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Folder", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotosWCF", IsReference = true)]
    public partial class Folder : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string DateField;

        private MyPhotosWCF.File[] FilesField;

        private int IdField;

        private string LocationField;

        private string NameField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosWCF.File[] Files
        {
            get
            {
                return this.FilesField;
            }
            set
            {
                this.FilesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IMyPhotos")]
public interface IMyPhotos
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetFile", ReplyAction = "http://tempuri.org/InterfaceFile/GetFileResponse")]
    MyPhotosWCF.File GetFile(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetFile", ReplyAction = "http://tempuri.org/InterfaceFile/GetFileResponse")]
    System.Threading.Tasks.Task<MyPhotosWCF.File> GetFileAsync(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetFileName", ReplyAction = "http://tempuri.org/InterfaceFile/GetFileNameResponse")]
    MyPhotosWCF.File GetFileName(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetFileName", ReplyAction = "http://tempuri.org/InterfaceFile/GetFileNameResponse")]
    System.Threading.Tasks.Task<MyPhotosWCF.File> GetFileNameAsync(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/DeleteFile", ReplyAction = "http://tempuri.org/InterfaceFile/DeleteFileResponse")]
    void DeleteFile(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/DeleteFile", ReplyAction = "http://tempuri.org/InterfaceFile/DeleteFileResponse")]
    System.Threading.Tasks.Task DeleteFileAsync(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/SearchInDescAndTags", ReplyAction = "http://tempuri.org/InterfaceFile/SearchInDescAndTagsResponse")]
    MyPhotosWCF.File[] SearchInDescAndTags(string text);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/SearchInDescAndTags", ReplyAction = "http://tempuri.org/InterfaceFile/SearchInDescAndTagsResponse")]
    System.Threading.Tasks.Task<MyPhotosWCF.File[]> SearchInDescAndTagsAsync(string text);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/SearchInDesc", ReplyAction = "http://tempuri.org/InterfaceFile/SearchInDescResponse")]
    MyPhotosWCF.File[] SearchInDesc(string text);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/SearchInDesc", ReplyAction = "http://tempuri.org/InterfaceFile/SearchInDescResponse")]
    System.Threading.Tasks.Task<MyPhotosWCF.File[]> SearchInDescAsync(string text);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/AddFile", ReplyAction = "http://tempuri.org/InterfaceFile/AddFileResponse")]
    void AddFile(string FileName, string FileDesc, string FileType, string FileSize, string FilePath, string FileTags, int FolderId, string FileDate);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/AddFile", ReplyAction = "http://tempuri.org/InterfaceFile/AddFileResponse")]
    System.Threading.Tasks.Task AddFileAsync(string FileName, string FileDesc, string FileType, string FileSize, string FilePath, string FileTags, int FolderId, string FileDate);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/UpdateFile", ReplyAction = "http://tempuri.org/InterfaceFile/UpdateFileResponse")]
    void UpdateFile(string selectedFile, string desc, string tags);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/UpdateFile", ReplyAction = "http://tempuri.org/InterfaceFile/UpdateFileResponse")]
    System.Threading.Tasks.Task UpdateFileAsync(string selectedFile, string desc, string tags);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFolder/GetFolderId", ReplyAction = "http://tempuri.org/InterfaceFolder/GetFolderIdResponse")]
    int GetFolderId(string folder);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFolder/GetFolderId", ReplyAction = "http://tempuri.org/InterfaceFolder/GetFolderIdResponse")]
    System.Threading.Tasks.Task<int> GetFolderIdAsync(string folder);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFolder/GetAllFolders", ReplyAction = "http://tempuri.org/InterfaceFolder/GetAllFoldersResponse")]
    MyPhotosWCF.Folder[] GetAllFolders();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFolder/GetAllFolders", ReplyAction = "http://tempuri.org/InterfaceFolder/GetAllFoldersResponse")]
    System.Threading.Tasks.Task<MyPhotosWCF.Folder[]> GetAllFoldersAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFolder/AddFolder", ReplyAction = "http://tempuri.org/InterfaceFolder/AddFolderResponse")]
    void AddFolder(string folderName, string folderLocation, string folderDate);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFolder/AddFolder", ReplyAction = "http://tempuri.org/InterfaceFolder/AddFolderResponse")]
    System.Threading.Tasks.Task AddFolderAsync(string folderName, string folderLocation, string folderDate);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMyPhotosChannel : IMyPhotos, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MyPhotosClient : System.ServiceModel.ClientBase<IMyPhotos>, IMyPhotos
{

    public MyPhotosClient()
    {
    }

    public MyPhotosClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public MyPhotosClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public MyPhotosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public MyPhotosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public MyPhotosWCF.File GetFile(string name)
    {
        return base.Channel.GetFile(name);
    }

    public System.Threading.Tasks.Task<MyPhotosWCF.File> GetFileAsync(string name)
    {
        return base.Channel.GetFileAsync(name);
    }

    public MyPhotosWCF.File GetFileName(string name)
    {
        return base.Channel.GetFileName(name);
    }

    public System.Threading.Tasks.Task<MyPhotosWCF.File> GetFileNameAsync(string name)
    {
        return base.Channel.GetFileNameAsync(name);
    }

    public void DeleteFile(string name)
    {
        base.Channel.DeleteFile(name);
    }

    public System.Threading.Tasks.Task DeleteFileAsync(string name)
    {
        return base.Channel.DeleteFileAsync(name);
    }

    public MyPhotosWCF.File[] SearchInDescAndTags(string text)
    {
        return base.Channel.SearchInDescAndTags(text);
    }

    public System.Threading.Tasks.Task<MyPhotosWCF.File[]> SearchInDescAndTagsAsync(string text)
    {
        return base.Channel.SearchInDescAndTagsAsync(text);
    }

    public MyPhotosWCF.File[] SearchInDesc(string text)
    {
        return base.Channel.SearchInDesc(text);
    }

    public System.Threading.Tasks.Task<MyPhotosWCF.File[]> SearchInDescAsync(string text)
    {
        return base.Channel.SearchInDescAsync(text);
    }

    public void AddFile(string FileName, string FileDesc, string FileType, string FileSize, string FilePath, string FileTags, int FolderId, string FileDate)
    {
        base.Channel.AddFile(FileName, FileDesc, FileType, FileSize, FilePath, FileTags, FolderId, FileDate);
    }

    public System.Threading.Tasks.Task AddFileAsync(string FileName, string FileDesc, string FileType, string FileSize, string FilePath, string FileTags, int FolderId, string FileDate)
    {
        return base.Channel.AddFileAsync(FileName, FileDesc, FileType, FileSize, FilePath, FileTags, FolderId, FileDate);
    }

    public void UpdateFile(string selectedFile, string desc, string tags)
    {
        base.Channel.UpdateFile(selectedFile, desc, tags);
    }

    public System.Threading.Tasks.Task UpdateFileAsync(string selectedFile, string desc, string tags)
    {
        return base.Channel.UpdateFileAsync(selectedFile, desc, tags);
    }

    public int GetFolderId(string folder)
    {
        return base.Channel.GetFolderId(folder);
    }

    public System.Threading.Tasks.Task<int> GetFolderIdAsync(string folder)
    {
        return base.Channel.GetFolderIdAsync(folder);
    }

    public MyPhotosWCF.Folder[] GetAllFolders()
    {
        return base.Channel.GetAllFolders();
    }

    public System.Threading.Tasks.Task<MyPhotosWCF.Folder[]> GetAllFoldersAsync()
    {
        return base.Channel.GetAllFoldersAsync();
    }

    public void AddFolder(string folderName, string folderLocation, string folderDate)
    {
        base.Channel.AddFolder(folderName, folderLocation, folderDate);
    }

    public System.Threading.Tasks.Task AddFolderAsync(string folderName, string folderLocation, string folderDate)
    {
        return base.Channel.AddFolderAsync(folderName, folderLocation, folderDate);
    }
}